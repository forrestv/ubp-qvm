Index: src/game/g_admin.c
===================================================================
RCS file: /devel/cvs/tremulous/src/game/g_admin.c,v
retrieving revision 1.1.1.1.4.4
diff -u -p -r1.1.1.1.4.4 g_admin.c
--- src/game/g_admin.c	17 Feb 2009 03:57:24 -0000	1.1.1.1.4.4
+++ src/game/g_admin.c	17 Feb 2009 04:05:36 -0000
@@ -45,6 +45,11 @@ g_admin_cmd_t g_admin_cmds[ ] = 
       "[^3ban#^7] (^5time^7) (^5reason^7)"
     },
     
+    {"adminlog", G_admin_adminlog, "A",
+      "list recent admin activity",
+      "(^5start id#|name|!command|-skip#^7) (^5search skip#^7)"
+    },
+
     {"admintest", G_admin_admintest, "a",
       "display your current admin level",
       ""
@@ -324,6 +329,9 @@ g_admin_ban_t *g_admin_bans[ MAX_ADMIN_B
 g_admin_command_t *g_admin_commands[ MAX_ADMIN_COMMANDS ];
 g_admin_namelog_t *g_admin_namelog[ MAX_ADMIN_NAMELOGS ];
 
+static int admin_adminlog_index = 0;
+g_admin_adminlog_t *g_admin_adminlog[ MAX_ADMIN_ADMINLOGS ];
+
 // This function should only be used directly when the client is connecting and thus has no GUID.
 // Else, use G_admin_permission() 
 qboolean G_admin_permission_guid( char *guid, char flag )
@@ -1343,11 +1351,13 @@ qboolean G_admin_cmd_check( gentity_t *e
     {
       trap_SendConsoleCommand( EXEC_APPEND, g_admin_commands[ i ]->exec );
       admin_log( ent, cmd, skip );
+      G_admin_adminlog_log( ent, cmd, NULL, skip, qtrue );
     }
     else
     {
       ADMP( va( "^3!%s: ^7permission denied\n", g_admin_commands[ i ]->command ) );
       admin_log( ent, "attempted", skip - 1 );
+      G_admin_adminlog_log( ent, cmd, NULL, skip, qfalse );
     }
     return qtrue;
   }
@@ -1361,11 +1371,13 @@ qboolean G_admin_cmd_check( gentity_t *e
     {
       g_admin_cmds[ i ].handler( ent, skip );
       admin_log( ent, cmd, skip );
+      G_admin_adminlog_log( ent, cmd, NULL, skip, qtrue );
     }
     else
     {
       ADMP( va( "^3!%s: ^7permission denied\n", g_admin_cmds[ i ].keyword ) );
       admin_log( ent, "attempted", skip - 1 );
+      G_admin_adminlog_log( ent, cmd, NULL, skip, qfalse );
     }
     return qtrue;
   }
@@ -2678,6 +2690,289 @@ qboolean G_admin_putteam( gentity_t *ent
   return qtrue;
 }
 
+void G_admin_adminlog_cleanup( void )
+{
+  int i;
+
+  for( i = 0; i < MAX_ADMIN_ADMINLOGS && g_admin_adminlog[ i ]; i++ )
+  {
+    G_Free( g_admin_adminlog[ i ] );
+    g_admin_adminlog[ i ] = NULL;
+  }
+
+  admin_adminlog_index = 0;
+}
+
+void G_admin_adminlog_log( gentity_t *ent, char *command, char *args, int skiparg, qboolean success )
+{
+  g_admin_adminlog_t *adminlog;
+  int previous;
+  int count = 1;
+  int i;
+
+  if( !command )
+    return;
+
+  if( !Q_stricmp( command, "adminlog" ) ||
+      !Q_stricmp( command, "admintest" ) ||
+      !Q_stricmp( command, "help" ) ||
+      !Q_stricmp( command, "info" ) ||
+      !Q_stricmp( command, "listadmins" ) ||
+      !Q_stricmp( command, "listplayers" ) ||
+      !Q_stricmp( command, "namelog" ) ||
+      !Q_stricmp( command, "showbans" ) ||
+      !Q_stricmp( command, "time" ) )
+    return;
+
+  previous = admin_adminlog_index - 1;
+  if( previous < 0 )
+    previous = MAX_ADMIN_ADMINLOGS - 1;
+
+  if( g_admin_adminlog[ previous ] )
+    count = g_admin_adminlog[ previous ]->id + 1;
+
+  if( g_admin_adminlog[ admin_adminlog_index ] )
+    adminlog = g_admin_adminlog[ admin_adminlog_index ];
+  else
+    adminlog = G_Alloc( sizeof( g_admin_adminlog_t ) );
+
+  memset( adminlog, 0, sizeof( adminlog ) );
+  adminlog->id = count;
+  adminlog->time = level.time - level.startTime;
+  adminlog->success = success;
+  Q_strncpyz( adminlog->command, command, sizeof( adminlog->command ) );
+
+  if ( args )
+    Q_strncpyz( adminlog->args, args, sizeof( adminlog->args ) );
+  else
+    Q_strncpyz( adminlog->args, G_SayConcatArgs( 1 + skiparg ), sizeof( adminlog->args ) );
+
+  if( ent )
+  {
+    qboolean found = qfalse;
+    // real admin name
+    for( i = 0; i < MAX_ADMIN_ADMINS && g_admin_admins[ i ]; i++ )
+    {
+      if( !Q_stricmp( g_admin_admins[ i ]->guid, ent->client->pers.guid ) )
+      {
+        Q_strncpyz( adminlog->name, g_admin_admins[ i ]->name, sizeof( adminlog->name ) );
+        found = qtrue;
+        break;
+      }
+    }
+    if( !found )
+      Q_strncpyz( adminlog->name, ent->client->pers.netname, sizeof( adminlog->name ) );
+
+    adminlog->level = ent->client->pers.adminLevel;
+  }
+  else
+  {
+    Q_strncpyz( adminlog->name, "console", sizeof( adminlog->name ) );
+    adminlog->level = 10000;
+  }
+
+  g_admin_adminlog[ admin_adminlog_index ] = adminlog;
+  admin_adminlog_index++;
+  if( admin_adminlog_index >= MAX_ADMIN_ADMINLOGS )
+    admin_adminlog_index = 0;
+}
+
+qboolean G_admin_adminlog( gentity_t *ent, int skiparg )
+{
+  g_admin_adminlog_t *results[ 10 ];
+  int result_index = 0;
+  char *search_cmd = NULL;
+  char *search_name = NULL;
+  int index;
+  int skip = 0;
+  int skipped = 0;
+  int checked = 0;
+  char n1[ MAX_NAME_LENGTH ];
+  char fmt_name[ 16 ];
+  char argbuf[ 32 ];
+  int name_length = 12;
+  int max_id = 0;
+  int i;
+  qboolean match;
+
+  memset( results, 0, sizeof( results ) );
+
+  index = admin_adminlog_index;
+  for( i = 0; i < 10; i++ )
+  {
+    int prev;
+
+    prev = index - 1;
+    if( prev < 0 )
+      prev = MAX_ADMIN_ADMINLOGS - 1;
+    if( !g_admin_adminlog[ prev ] )
+      break;
+    if( g_admin_adminlog[ prev ]->id > max_id )
+      max_id = g_admin_adminlog[ prev ]->id;
+    index = prev;
+  }
+
+  if( G_SayArgc() > 1 + skiparg )
+  {
+    G_SayArgv( 1 + skiparg, argbuf, sizeof( argbuf ) );
+    if( ( *argbuf >= '0' && *argbuf <= '9' ) || *argbuf == '-' )
+    {
+      int id;
+
+      id = atoi( argbuf );
+      if( id < 0 )
+        id += ( max_id - 9 );
+      else if( id <= max_id - MAX_ADMIN_ADMINLOGS )
+        id = max_id - MAX_ADMIN_ADMINLOGS + 1;
+
+      if( id + 9 >= max_id )
+        id = max_id - 9;
+      if( id < 1 )
+        id = 1;
+      for( i = 0; i < MAX_ADMIN_ADMINLOGS; i++ )
+      {
+        if( g_admin_adminlog[ i ]->id == id )
+        {
+          index = i;
+          break;
+        }
+      }
+    }
+    else if ( *argbuf == '!' )
+    {
+      search_cmd = argbuf + 1;
+    }
+    else
+    {
+      search_name = argbuf;
+    }
+
+    if( G_SayArgc() > 2 + skiparg && ( search_cmd || search_name ) )
+    {
+      char skipbuf[ 4 ];
+      G_SayArgv( 2 + skiparg, skipbuf, sizeof( skipbuf ) );
+      skip = atoi( skipbuf );
+    }
+  }
+
+  if( search_cmd || search_name )
+  {
+    g_admin_adminlog_t *result_swap[ 10 ];
+
+    memset( result_swap, 0, sizeof( result_swap ) );
+
+    index = admin_adminlog_index - 1;
+    if( index < 0 )
+      index = MAX_ADMIN_ADMINLOGS - 1;
+
+    while( g_admin_adminlog[ index ] &&
+      checked < MAX_ADMIN_ADMINLOGS &&
+      result_index < 10 )
+    {
+      match = qfalse;
+      if( search_cmd )
+      {
+        if( !Q_stricmp( search_cmd, g_admin_adminlog[ index ]->command ) )
+          match = qtrue;
+      }
+      if( search_name )
+      {
+        G_SanitiseString( g_admin_adminlog[ index ]->name, n1, sizeof( n1 ) );
+        if( strstr( n1, search_name ) )
+          match = qtrue;
+      }
+
+      if( match && skip > 0 )
+      {
+        match = qfalse;
+        skip--;
+        skipped++;
+      }
+      if( match )
+      {
+        result_swap[ result_index ] = g_admin_adminlog[ index ];
+        result_index++;
+      }
+
+      checked++;
+      index--;
+      if( index < 0 )
+        index = MAX_ADMIN_ADMINLOGS - 1;
+    }
+    // search runs backwards, turn it around
+    for( i = 0; i < result_index; i++ )
+      results[ i ] = result_swap[ result_index - i - 1 ];
+  }
+  else
+  {
+    while( g_admin_adminlog[ index ] && result_index < 10 )
+    {
+      results[ result_index ] = g_admin_adminlog[ index ];
+      result_index++;
+      index++;
+      if( index >= MAX_ADMIN_ADMINLOGS )
+        index = 0;
+    }
+  }
+
+  for( i = 0; results[ i ] && i < 10; i++ )
+  {
+    int l;
+
+    G_DecolorString( results[ i ]->name, n1 );
+    l = strlen( n1 );
+    if( l > name_length )
+      name_length = l;
+  }
+  ADMBP_begin( );
+  for( i = 0; results[ i ] && i < 10; i++ )
+  {
+    char levelbuf[ 8 ];
+    int t;
+
+    t = results[ i ]->time / 1000;
+    G_DecolorString( results[ i ]->name, n1 );
+    Com_sprintf( fmt_name, sizeof( fmt_name ), "%%%ds", 
+      ( name_length + strlen( results[ i ]->name ) - strlen( n1 ) ) );
+    Com_sprintf( n1, sizeof( n1 ), fmt_name, results[ i ]->name );
+    Com_sprintf( levelbuf, sizeof( levelbuf ), "%2d", results[ i ]->level );
+    ADMBP( va( "%s%3d %3d:%02d %2s ^7%s^7 %s!%s ^7%s^7\n",
+      ( results[ i ]->success ) ? "^7" : "^1",
+      results[ i ]->id,
+      t / 60, t % 60,
+      ( results[ i ]->level ) < 10000 ? levelbuf : " -",
+      n1,
+      ( results[ i ]->success ) ? "^3" : "^1",
+      results[ i ]->command,
+      results[ i ]->args ) );
+  }
+  if( search_cmd || search_name )
+  {
+    ADMBP( va( "^3!adminlog:^7 Showing %d matches for '%s^7'.",
+      result_index,
+      argbuf ) );
+    if( checked < MAX_ADMIN_ADMINLOGS && g_admin_adminlog[ checked ] )
+      ADMBP( va( " run '!adminlog %s^7 %d' to see more",
+       argbuf,
+       skipped + result_index ) );
+    ADMBP( "\n" );
+  }
+  else if ( results[ 0 ] )
+  {
+    ADMBP( va( "^3!adminlog:^7 Showing %d - %d of %d.\n",
+      results[ 0 ]->id,
+      results[ result_index - 1 ]->id,
+      max_id ) );
+  }
+  else
+  {
+    ADMBP( "^3!adminlog:^7 log is empty.\n" );
+  }
+  ADMBP_end( );
+
+  return qtrue;
+}
+
 qboolean G_admin_map( gentity_t *ent, int skiparg )
 {
   char map[ MAX_QPATH ];
Index: src/game/g_admin.h
===================================================================
RCS file: /devel/cvs/tremulous/src/game/g_admin.h,v
retrieving revision 1.1.1.1.4.2
diff -u -p -r1.1.1.1.4.2 g_admin.h
--- src/game/g_admin.h	17 Feb 2009 03:57:24 -0000	1.1.1.1.4.2
+++ src/game/g_admin.h	17 Feb 2009 04:00:04 -0000
@@ -36,6 +36,8 @@ Foundation, Inc., 51 Franklin St, Fifth 
 #define MAX_ADMIN_BANS 1024
 #define MAX_ADMIN_NAMELOGS 128
 #define MAX_ADMIN_NAMELOG_NAMES 5
+#define MAX_ADMIN_ADMINLOGS 128
+#define MAX_ADMIN_ADMINLOG_ARGS 50
 #define MAX_ADMIN_FLAGS 64
 #define MAX_ADMIN_COMMANDS 64
 #define MAX_ADMIN_CMD_LEN 20
@@ -148,6 +150,18 @@ typedef struct g_admin_namelog
 }
 g_admin_namelog_t;
 
+typedef struct g_admin_adminlog
+{
+  char      name[ MAX_NAME_LENGTH ];
+  char      command[ MAX_ADMIN_CMD_LEN ];
+  char      args[ MAX_ADMIN_ADMINLOG_ARGS ];
+  int       id;
+  int       time;
+  int       level;
+  qboolean  success;
+}
+g_admin_adminlog_t;
+
 qboolean G_admin_ban_check( char *userinfo, char *reason, int rlen );
 qboolean G_admin_cmd_check( gentity_t *ent, qboolean say );
 qboolean G_admin_readconfig( gentity_t *ent, int skiparg );
@@ -169,6 +183,9 @@ qboolean G_admin_suspendban( gentity_t *
 qboolean G_admin_ban( gentity_t *ent, int skiparg );
 qboolean G_admin_unban( gentity_t *ent, int skiparg );
 qboolean G_admin_putteam( gentity_t *ent, int skiparg );
+qboolean G_admin_adminlog( gentity_t *ent, int skiparg );
+void G_admin_adminlog_cleanup( void );
+void G_admin_adminlog_log( gentity_t *ent, char *command, char *args, int skiparg, qboolean success );
 qboolean G_admin_listadmins( gentity_t *ent, int skiparg );
 qboolean G_admin_listlayouts( gentity_t *ent, int skiparg );
 qboolean G_admin_listplayers( gentity_t *ent, int skiparg );
Index: src/game/g_cmds.c
===================================================================
RCS file: /devel/cvs/tremulous/src/game/g_cmds.c,v
retrieving revision 1.1.1.1.4.3
diff -u -p -r1.1.1.1.4.3 g_cmds.c
--- src/game/g_cmds.c	17 Feb 2009 03:21:44 -0000	1.1.1.1.4.3
+++ src/game/g_cmds.c	17 Feb 2009 04:00:04 -0000
@@ -1583,6 +1583,7 @@ void Cmd_CallVote_f( gentity_t *ent )
       trap_SendServerCommand( ent-g_entities,
         "print \"callvote: admin is immune from vote kick\n\"" );
       G_AdminsPrintf("%s\n",message);
+      G_admin_adminlog_log( ent, "vote", NULL, 0, qfalse );
       return;
     }
 
@@ -1609,6 +1610,7 @@ void Cmd_CallVote_f( gentity_t *ent )
       trap_SendServerCommand( ent-g_entities,
         "print \"callvote: admin is immune from vote mute\n\"" );
       G_AdminsPrintf("%s\n",message);
+      G_admin_adminlog_log( ent, "vote", NULL, 0, qfalse );
       return;
     }
     Com_sprintf( level.voteString, sizeof( level.voteString ),
@@ -1639,6 +1641,7 @@ void Cmd_CallVote_f( gentity_t *ent )
        trap_SendServerCommand( ent-g_entities, va(
          "print \"You cannot call for a restart after %d seconds\n\"",
          g_mapvoteMaxTime.integer ) );
+       G_admin_adminlog_log( ent, "vote", NULL, 0, qfalse );
        return;
     }
     Com_sprintf( level.voteString, sizeof( level.voteString ), "%s", arg1 );
@@ -1656,6 +1659,7 @@ void Cmd_CallVote_f( gentity_t *ent )
        trap_SendServerCommand( ent-g_entities, va(
          "print \"You cannot call for a mapchange after %d seconds\n\"",
          g_mapvoteMaxTime.integer ) );
+       G_admin_adminlog_log( ent, "vote", NULL, 0, qfalse );
        return;
     }
   
@@ -1755,6 +1759,7 @@ void Cmd_CallVote_f( gentity_t *ent )
   if ( reason[0]!='\0' )
     Q_strcat( level.voteDisplayString, sizeof( level.voteDisplayString ), va( " Reason: '%s^7'", reason ) );
   
+  G_admin_adminlog_log( ent, "vote", NULL, 0, qtrue );
 
   trap_SendServerCommand( -1, va( "print \"%s" S_COLOR_WHITE
          " called a vote: %s\n\"", ent->client->pers.netname, level.voteDisplayString ) );
@@ -2044,6 +2049,7 @@ void Cmd_CallTeamVote_f( gentity_t *ent 
       trap_SendServerCommand( ent-g_entities,
         "print \"callteamvote: admin is immune from vote kick\n\"" );
       G_AdminsPrintf("%s\n",message);
+      G_admin_adminlog_log( ent, "teamvote", NULL, 0, qfalse );
       return;
     }
 
@@ -2071,6 +2077,7 @@ void Cmd_CallTeamVote_f( gentity_t *ent 
       trap_SendServerCommand( ent-g_entities,
         "print \"callteamvote: admin is immune from denybuild\n\"" );
       G_AdminsPrintf("%s\n",message);
+      G_admin_adminlog_log( ent, "teamvote", NULL, 0, qfalse );
       return;
     }
 
@@ -2173,6 +2180,8 @@ void Cmd_CallTeamVote_f( gentity_t *ent 
     return;
   }
   ent->client->pers.voteCount++;
+
+  G_admin_adminlog_log( ent, "teamvote", arg1, 0, qtrue );
   
   if ( reason[0]!='\0' )
     Q_strcat( level.teamVoteDisplayString[ cs_offset ], sizeof( level.teamVoteDisplayString[ cs_offset ] ), va( " Reason: '%s'^7", reason ) );
Index: src/game/g_main.c
===================================================================
RCS file: /devel/cvs/tremulous/src/game/g_main.c,v
retrieving revision 1.1.1.1.4.4
diff -u -p -r1.1.1.1.4.4 g_main.c
--- src/game/g_main.c	17 Feb 2009 03:30:08 -0000	1.1.1.1.4.4
+++ src/game/g_main.c	17 Feb 2009 04:03:26 -0000
@@ -812,6 +812,7 @@ void G_ShutdownGame( int restart )
 
   G_admin_cleanup( );
   G_admin_namelog_cleanup( );
+  G_admin_adminlog_cleanup( );
 
   level.restarted = qfalse;
   level.surrenderTeam = PTE_NONE;
@@ -2281,6 +2282,7 @@ void CheckVote( void )
 {
   int votePassThreshold=level.votePassThreshold;
   int voteYesPercent;
+  qboolean pass = qfalse;
 
   if( level.voteExecuteTime && level.voteExecuteTime < level.time )
   {
@@ -2337,6 +2339,7 @@ void CheckVote( void )
             level.voteYes, level.voteNo ) );
       G_LogPrintf( "Vote: Vote passed (%d-%d)\n", level.voteYes, level.voteNo );
       level.voteExecuteTime = level.time + 3000;
+      pass = qtrue;
     }
     else
     {
@@ -2356,6 +2359,7 @@ void CheckVote( void )
             level.voteYes, level.voteNo ) );
       G_LogPrintf( "Vote: Vote passed (%d - %d)\n", level.voteYes, level.voteNo );
       level.voteExecuteTime = level.time + 3000;
+      pass = qtrue;
     }
     else if( level.voteNo > (int)( (double) level.numConnectedClients * 
                                      ( (double) ( 100.0-votePassThreshold )/ 100.0 ) ) )
@@ -2372,6 +2376,12 @@ void CheckVote( void )
     }
   }
 
+  G_admin_adminlog_log( NULL, "vote",
+    va( "%s^7 (^2Y:%d^7-^1N:%d^7, %d percent)",
+      ( pass ) ? "^2passed" : "^1failed",
+      level.voteYes, level.voteNo, voteYesPercent ),
+    0, pass );
+
   level.voteTime = 0;
   trap_SetConfigstring( CS_VOTE_TIME, "" );
   trap_SetConfigstring( CS_VOTE_STRING, "" );
@@ -2386,6 +2396,8 @@ CheckTeamVote
 void CheckTeamVote( int team )
 {
   int cs_offset;
+  int voteYesPercent = 0;
+  qboolean pass = qfalse;
 
   if ( team == PTE_HUMANS )
     cs_offset = 0;
@@ -2397,6 +2409,12 @@ void CheckTeamVote( int team )
   if( !level.teamVoteTime[ cs_offset ] )
     return;
 
+  if( ( level.teamVoteYes[ cs_offset ] + level.teamVoteNo[ cs_offset ] ) )
+  {
+    voteYesPercent = (100 * level.teamVoteYes[ cs_offset ]) /
+                     (level.teamVoteYes[ cs_offset ] + level.teamVoteNo[ cs_offset ]);
+  }
+
   if( level.time - level.teamVoteTime[ cs_offset ] >= VOTE_TIME )
   {
     if( level.teamVoteYes[ cs_offset ] > level.teamVoteNo[ cs_offset ] && level.teamVoteYes[ cs_offset ] >= 2 )
@@ -2404,6 +2422,7 @@ void CheckTeamVote( int team )
       // execute the command, then remove the vote
       trap_SendServerCommand( -1, va("print \"Team vote passed  (%d - %d)\n\"", level.teamVoteYes[ cs_offset ], level.teamVoteNo[ cs_offset ] ) );
       trap_SendConsoleCommand( EXEC_APPEND, va( "%s\n", level.teamVoteString[ cs_offset ] ) );
+      pass = qtrue;
     }
     else
     {
@@ -2420,6 +2439,7 @@ void CheckTeamVote( int team )
       G_LogPrintf( "Teamvote: Team vote passed (%d - %d)\n", level.teamVoteYes[ cs_offset ], level.teamVoteNo[ cs_offset ] );
       //
       trap_SendConsoleCommand( EXEC_APPEND, va( "%s\n", level.teamVoteString[ cs_offset ] ) );
+      pass = qtrue;
     }
     else if( level.teamVoteNo[ cs_offset ] >= level.numteamVotingClients[ cs_offset ] / 2 )
     {
@@ -2434,6 +2454,12 @@ void CheckTeamVote( int team )
     }
   }
 
+  G_admin_adminlog_log( NULL, "teamvote",
+    va( "%s^7 (^2Y:%d^7-^1N:%d^7, %d percent)",
+      ( pass ) ? "^2passed" : "^1failed",
+      level.teamVoteYes[ cs_offset ], level.teamVoteNo[ cs_offset ], voteYesPercent ),
+    0, pass );
+
   level.teamVoteTime[ cs_offset ] = 0;
   trap_SetConfigstring( CS_TEAMVOTE_TIME + cs_offset, "" );
   trap_SetConfigstring( CS_TEAMVOTE_STRING + cs_offset, "" );
